<?php

/**
 *-----------------------------------------------------------------------------
 * Retraining Notification
 *-----------------------------------------------------------------------------
 * Upgrade retraining notification schema
 *
 * @package     local_retraining
 * @copyright   OTrain Pty Ltd <http://www.otrain.com.au>
 *-----------------------------------------------------------------------------
 **/

function xmldb_local_retraining_upgrade($oldversion) {
    global $CFG, $DB;

    $dbman = $DB->get_manager();

	// Do this check all the time just in case there are any missing tables.
    // NOTE: this code has been copied from the code generated by XMLDB editor.

    //-------------------------------------------------------------------------------
    // Archive Course Completions table
    //-------------------------------------------------------------------------------

    // Define table archive_crse_comp to be created.
    $table = new xmldb_table('archive_crse_comp');

    // Adding fields to table archive_crse_comp.
    $table->add_field('id', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, XMLDB_SEQUENCE, null);
    $table->add_field('coursecompletionid', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, null, null);
    $table->add_field('userid', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, null, null);
    $table->add_field('courseid', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, null, null);
    $table->add_field('timeenrolled', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, null, null);
    $table->add_field('timestarted', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, null, null);
    $table->add_field('timecompleted', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, null, null);
    $table->add_field('reaggregate', XMLDB_TYPE_INTEGER, '1', null, XMLDB_NOTNULL, null, '0');

    // Adding keys to table archive_crse_comp.
    $table->add_key('primary', XMLDB_KEY_PRIMARY, array('id'));

    // Conditionally launch create table for archive_crse_comp.
    if (!$dbman->table_exists($table)) {
        $dbman->create_table($table);
    }

    //-------------------------------------------------------------------------------
    // Archive Course Completions Criteria table
    //-------------------------------------------------------------------------------

    // Define table archive_crse_comp_crit to be created.
    $table = new xmldb_table('archive_crse_comp_crit');

    // Adding fields to table archive_crse_comp_crit.
    $table->add_field('id', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, XMLDB_SEQUENCE, null);
    $table->add_field('coursecompletioncritid', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, null, null);
    $table->add_field('userid', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, null, null);
    $table->add_field('courseid', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, null, null);
    $table->add_field('criteriaid', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, null, null);
    $table->add_field('gradefinal', XMLDB_TYPE_NUMBER, '10, 5', null, null, null, null);
    $table->add_field('unenroled', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
    $table->add_field('timecompleted', XMLDB_TYPE_INTEGER, '10', null, null, null, null);

    // Adding keys to table archive_crse_comp_crit.
    $table->add_key('primary', XMLDB_KEY_PRIMARY, array('id'));

    // Conditionally launch create table for archive_crse_comp_crit.
    if (!$dbman->table_exists($table)) {
        $dbman->create_table($table);
    }

    //-------------------------------------------------------------------------------
    // Archive issued certificates
    //-------------------------------------------------------------------------------

    // Define table archive_issued_certs to be created.
    $table = new xmldb_table('archive_issued_certs');

    // Adding fields to table archive_issued_certs.
    $table->add_field('id', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, XMLDB_SEQUENCE, null);
    $table->add_field('certissueid', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, null, null);
    $table->add_field('userid', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, null, null);
    $table->add_field('certificateid', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, null, null);
    $table->add_field('code', XMLDB_TYPE_CHAR, '40', null, XMLDB_NOTNULL, null, null);
    $table->add_field('timecreated', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, null, null);

    // Adding keys to table archive_issued_certs.
    $table->add_key('primary', XMLDB_KEY_PRIMARY, array('id'));

    // Conditionally launch create table for archive_issued_certs.
    if (!$dbman->table_exists($table)) {
        $dbman->create_table($table);
    }

    //-------------------------------------------------------------------------------
    // Archive grades
    //-------------------------------------------------------------------------------

    // Define table archive_grades to be created.
    $table = new xmldb_table('archive_grades');

    // Adding fields to table archive_grades.
    $table->add_field('id', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, XMLDB_SEQUENCE, null);
    $table->add_field('itemid', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, null, null);
    $table->add_field('userid', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, null, null);
    $table->add_field('rawgrade', XMLDB_TYPE_NUMBER, '10, 5', null, null, null, null);
    $table->add_field('usermodified', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
    $table->add_field('finalgrade', XMLDB_TYPE_NUMBER, '10, 5', null, null, null, null);
    $table->add_field('timecreated', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
    $table->add_field('timemodified', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
    $table->add_field('aggregationstatus', XMLDB_TYPE_CHAR, '10', null, XMLDB_NOTNULL, null, null);
    $table->add_field('aggregationweight', XMLDB_TYPE_NUMBER, '10, 5', null, null, null, null);

    // Adding keys to table archive_grades.
    $table->add_key('primary', XMLDB_KEY_PRIMARY, array('id'));

    // Conditionally launch create table for archive_grades.
    if (!$dbman->table_exists($table)) {
        $dbman->create_table($table);
    }

    //-------------------------------------------------------------------------------
    // Course custom table
    //-------------------------------------------------------------------------------

    // Define table course_custom to be created.
    $table = new xmldb_table('course_custom');

    // Adding keys to table course_custom.
    $table->add_key('primary', XMLDB_KEY_PRIMARY, array('id'));

    // Adding fields to table course_custom.
    $table->add_field('id', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, XMLDB_SEQUENCE, null);
    $table->add_field('courseid', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, null, null);
    $table->add_field('course_url', XMLDB_TYPE_CHAR, '255', null, null, null, null);
    $table->add_field('retraining_required', XMLDB_TYPE_INTEGER, '1', null, XMLDB_NOTNULL, null, '0');
    $table->add_field('retraining_frequency', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, null, null);
    $table->add_field('retraining_notification_type', XMLDB_TYPE_CHAR, '10', null, XMLDB_NOTNULL, null, null);
    $table->add_field('retraining_notification_days', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, null, null);
    $table->add_field('retraining_email_subject', XMLDB_TYPE_TEXT, null, null, XMLDB_NOTNULL, null, null);
    $table->add_field('retraining_email_message', XMLDB_TYPE_TEXT, null, null, XMLDB_NOTNULL, null, null);

    // Conditionally launch create table for course_custom.
    if (!$dbman->table_exists($table)) {
        $dbman->create_table($table);
    }

    //-------------------------------------------------------------------------------
    // Retraining notification table
    //-------------------------------------------------------------------------------

    // Define table retraining_notifications to be created.
    $table = new xmldb_table('retraining_notifications');

    // Adding fields to table retraining_notifications.
    $table->add_field('id', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, XMLDB_SEQUENCE, null);
    $table->add_field('userid', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, null, null);
    $table->add_field('courseid', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, null, null);
    $table->add_field('userenrolmentid', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, null, null);
    $table->add_field('notification_type', XMLDB_TYPE_CHAR, '10', null, XMLDB_NOTNULL, null, null);
    $table->add_field('notification_timestamp', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, null, null);
    $table->add_field('notification_days', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, null, null);
    $table->add_field('email_sent', XMLDB_TYPE_INTEGER, '1', null, XMLDB_NOTNULL, null, null);

    // Adding keys to table retraining_notifications.
    $table->add_key('primary', XMLDB_KEY_PRIMARY, array('id'));

    // Conditionally launch create table for retraining_notifications.
    if (!$dbman->table_exists($table)) {
        $dbman->create_table($table);
    }

    return true;
}